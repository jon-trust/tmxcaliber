name: Pytest and release tag

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Pytest
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install coverage black
        pip install .

    - name: Run pytest test suite with coverage
      run: |
        python ./test/run_tests.py
        coverage run ./test/run_tests.py
        coverage report -m
      continue-on-error: false

    - name: Run Black
      run: black --check .
      continue-on-error: false

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract version from setup.py
      id: get_version
      run: |
        VERSION=$(python setup.py --version)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Set up date for release
      id: date
      run: echo "RELEASE_DATE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}-${{ env.RELEASE_DATE }}
        release_name: Release ${{ env.VERSION }}-${{ env.RELEASE_DATE }}
        body: |
          Release created automatically
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}